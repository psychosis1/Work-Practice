@startuml

title __CLIENT's Class Diagram__\n

  namespace main {
    namespace client {
      class main.client.ClientController {
          - clientForm : Label
          - labels : List<Label>
          - menu : MenuBar
          - testBoyko : Label
          - testGAGE : Label
          - testSOCRATES : Label
          - typologicalGroups : Label
          - workArea : AnchorPane
          + initialize()
          + setColorForLabel()
          + updateWorkArea()
          - aboutUs()
          - logout()
          - toAdmin()
          - toClientForm()
          - toHome()
          - toProfile()
          - toTestBoyko()
          - toTestGAGE()
          - toTypologicalGroups()
      }
    }
  }
  

  namespace main {
    namespace client {
      class main.client.ClientFormController {
          - fields : List<FieldControl>
          - gridPane : GridPane
          - save : Button
          - scrollPane : ScrollPane
          + initialize()
          - clientNotNull()
          - delete()
          - formatSpinner()
          - saveChanges()
          - saveInClient()
          - setFields()
          - viewRightColumn()
      }
    }
  }
  

  namespace main {
    namespace client {
      class main.client.TestBoykoController {
          - fields : List<FieldControlBoyko>
          - result : Button
          - save : Button
          - scrollPane : ScrollPane
          - title : Label
          - vBox : VBox
          + initialize()
          - again()
          - askAttempt()
          - delete()
          - getResult()
          - saveChanges()
          - saveInTestBoyko()
          - setFields()
          - setNodes()
          - testBoykoNotNull()
      }
    }
  }
  

  namespace main {
    namespace client {
      class main.client.TestGAGEController {
          - fields : List<FieldControlGAGE>
          - result : Button
          - save : Button
          - scrollPane : ScrollPane
          - title : Label
          - vBox : VBox
          + initialize()
          - again()
          - askAttempt()
          - delete()
          - getResult()
          - saveChanges()
          - saveInTestGAGE()
          - setFields()
          - setNodes()
          - setTitleForSection()
          - testGAGENotNull()
      }
    }
  }
  

  namespace main {
    namespace client {
      class main.client.TypologicalGroupController {
          - text : TextArea
          - title : Label
          + initialize()
          - askAttempt()
          - getText()
          - insert()
          - select()
          - selectTests()
          - setGroup()
          - update()
      }
    }
  }
  

  main.client.ClientFormController o-- database.ClientTable : table
  main.client.TestBoykoController o-- main.client.interpretation.InterTestBoyko : inter
  main.client.TestBoykoController o-- database.TestBoykoTable : table
  main.client.TestBoykoController o-- entity.TestBoyko : testBoyko
  main.client.TestGAGEController o-- main.client.interpretation.InterTestGAGE : inter
  main.client.TestGAGEController o-- database.TestGAGETable : table
  main.client.TestGAGEController o-- entity.TestGAGE : testGAGE
  main.client.TypologicalGroupController o-- database.TestBoykoTable : boykoTable
  main.client.TypologicalGroupController o-- database.TestGAGETable : gageTable
  main.client.TypologicalGroupController o-- entity.TypologicalGroup : group
  main.client.TypologicalGroupController o-- database.TypologicalGroupTable : table
  main.client.TypologicalGroupController o-- entity.TestBoyko : testBoyko
  main.client.TypologicalGroupController o-- entity.TestGAGE : testGAGE


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
